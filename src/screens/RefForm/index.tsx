import { customSelectStyles, langData, sexData } from 'data';
import React, {
  FC,
  FormEventHandler,
  useCallback,
  useRef,
  useState,
} from 'react';
import Select, { MultiValue } from 'react-select';
import {
  Button,
  CheckBox,
  Header,
  ImagePicker,
  RadioButtonGroup,
  TextInput,
} from 'ui';
import './styles.css';

interface Props {}

const Form: FC<Props> = () => {
  const [sex, setSex] = useState(0);
  const [photo, setPhoto] = useState<File>();
  const nameRef = useRef<HTMLInputElement>(null);
  const ageRef = useRef<HTMLInputElement>(null);
  const hasChildrenRef = useRef<HTMLInputElement>(null);
  const marriedRef = useRef<HTMLInputElement>(null);
  const [languages, setLanguages] = useState<
    MultiValue<{ label: string; value: string }>
  >([]);
  console.log('form rerender');

  const submit: FormEventHandler<HTMLFormElement> = (e) => {
    e.preventDefault();
    console.clear();
    console.log(`
<-----Doggo –ø—Ä–æ—Ñ–∏–ª—å----->\n
  üü¢ –ò–º—è: ${nameRef.current?.value}\n
  üü¢ –í–æ–∑—Ä–∞—Å—Ç: ${ageRef.current?.value}\n
  üü¢ –ü–æ–ª: ${sexData[sex].label} (${sexData[sex].value})\n
  üü¢ –§–æ—Ç–æ: ${photo?.name}\n
  üü¢ –ï—Å—Ç—å –¥–µ—Ç–∏: ${hasChildrenRef.current?.checked}\n
  üü¢ –ñ–µ–Ω–∞—Ç/–ó–∞–º—É–∂–µ–º: ${marriedRef.current?.checked}\n
  üü¢ –í—ã–±—Ä–∞–Ω–Ω—ã–µ —è–∑—ã–∫–∏: ${languages.map((item) => item.label)}\n
<----------------------->
    `);
  };

  const renderNoElementText = useCallback(() => '–ù–∏—á–µ–≥–æ –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å', []);
  return (
    <div className="form_container">
      <Header title="–§–æ—Ä–º–∞ —Å—ã–Ω–∞ –º–∞–º–∏–Ω–æ–π –ø–æ–¥—Ä—É–≥–∏" showBackButton />
      <form onSubmit={submit}>
        <header className="form_header bottom-offset">Doggo –ø—Ä–æ—Ñ–∏–ª—å</header>
        <div className="form_avatar-block bottom-offset">
          <ImagePicker title="–§–æ—Ç–æ" onFilePick={setPhoto} photo={photo} />
          <RadioButtonGroup
            data={sexData}
            onRadioChange={setSex}
            label="–ü–æ–ª"
            selected={sex}
          />
          <div className="form_family-block">
            <span className="input-label">–°–µ–º–µ–π–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ</span>
            <CheckBox label="–ï—Å—Ç—å –¥–µ—Ç–∏" ref={hasChildrenRef} />
            <CheckBox
              label={`–ñ–µ–Ω–∞—Ç${sex === 1 ? 'a' : ''}/–ó–∞–º—É–∂–µ–º`}
              ref={marriedRef}
            />
          </div>
        </div>
        <TextInput
          containerClassName="full-width bottom-offset"
          label="–ò–º—è"
          defaultValue="Doggo"
          ref={nameRef}
        />
        <TextInput
          containerClassName="full-width bottom-offset"
          label="–í–æ–∑—Ä–∞—Å—Ç"
          type="number"
          min={14}
          max={201}
          defaultValue={23}
          ref={ageRef}
        />
        <span className="input-label">–Ø–∑—ã–∫–∏</span>
        <Select<{ label: string; value: string }, true>
          options={langData}
          isMulti
          placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫–∏..."
          noOptionsMessage={renderNoElementText}
          value={languages}
          onChange={(newValue) => setLanguages(newValue)}
          styles={customSelectStyles}
        />
        <Button className="form_button" type="submit">
          –û—Ç–ø—Ä–∞–≤–∏—Ç—å
        </Button>
      </form>
    </div>
  );
};

export default Form;
